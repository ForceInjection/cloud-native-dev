apiVersion: v1
kind: ConfigMap
metadata:
  name: python-program
data:
  server.py: |
    import http.server
    import socketserver
    import socket
    from http import HTTPStatus

    class Handler(http.server.SimpleHTTPRequestHandler):
        def do_GET(self):
            self.send_response(HTTPStatus.OK)
            self.send_header("Content-type", "text/html")
            self.end_headers()
            message = "<html><body><h2>Hello world, I'm host: </h2><br/><h1>" + socket.gethostname() + "</h1></body></html>"
            self.wfile.write(message.encode())

    if __name__ == "__main__":
        httpd = socketserver.TCPServer(('', 8000), Handler)
        print("Server started.")
        httpd.serve_forever()
        print("Server stopped.")
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python
  labels:
    app: python
spec:
  replicas: 2
  selector:
    matchLabels:
      app: python
  template:
    metadata:
      labels:
        app: python
    spec:
      containers:
      - name: python
        image: python:3.9.19-slim
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/home/server.py"]
        volumeMounts:
        - name: python-program-volume
          mountPath: /home/server.py
          subPath: server.py
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: 0.5
            memory: 100Mi
          limits:
            cpu: 0.5
            memory: 100Mi
      volumes:
      - name: python-program-volume
        configMap:
          name: python-program
